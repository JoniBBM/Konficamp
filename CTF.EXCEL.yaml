name: CTF
description: Used to calculate points for a real-life Capture-the-flag game.
host: EXCEL
api_set: {}
script:
  content: >
    /* global clearInterval, console, CustomFunctions, setInterval */


    /**
     * Counts the flags
     * @customfunction
     * @param flags cell
     */
    function countflags(flags: string): number {
      const split = flags.split(",");
      return split.filter((flag) => flag.trim().length != 0).length;
    }


    /**
     * Get the range bonus points
     * @customfunction
     * @param flagRange range over all flags
     * @param bonusCount amount of possible bonuses
     * @param minute current minute of the game
     */
    function getbonus(flagRange: string[][], bonusCount: number, minute:
    number): number {
      const flatRange = flagRange.reduce((accumulator, value) => accumulator.concat(value), []);
      const flagRoundCounter = Array(flatRange.length);
      flatRange.forEach((cell, i) => {
        flagRoundCounter[i] = Array(8).fill(0);
        cell
          .split(",")
          .map((flag) => flag.trim())
          .forEach((flag) => {
            if (i == 0) {
              flagRoundCounter[i][parseInt(flag) - 1] = 1;
            } else {
              flagRoundCounter[i][parseInt(flag) - 1] = flagRoundCounter[i - 1][parseInt(flag) - 1] + 1;
            }
          });
      });

      let selectedFlags: number[] = Array();
      for (let currBonus = selectedFlags.length; currBonus < bonusCount; currBonus++) {
        let maxIndex = -1;
        let maxValue = 0;
        for (let flag = 0; flag < 8; flag++) {
          if (!selectedFlags.some((selFlag) => selFlag == flag)) {
            if (flagRoundCounter[minute - 1][flag] > maxValue) {
              maxIndex = flag;
              maxValue = flagRoundCounter[minute - 1][flag];
            }
          }
        }
        if (maxIndex != -1) {
          selectedFlags.push(maxIndex);
        }
      }

      if (minute > flagRoundCounter.length) {
        return 0;
      }

      let points = 0;
      selectedFlags.forEach((flag) => {
        points += flagRoundCounter[minute - 1][flag];
      });

      console.log("Round", minute, "Flags", JSON.stringify(selectedFlags));

      return points;
    }
  language: typescript
libraries: |
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js
  @types/office-js

  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  core-js@2.4.1/client/core.min.js
  @types/core-js

  jquery@3.1.1
  @types/jquery@3.3.1
